name: Initialize Module

on:
  workflow_dispatch:
    inputs:
      new_id:
        description: '新的模块 ID'
        required: true
      name:
        description: '模块名称（不填则使用模块 ID）'
        required: false
      description:
        description: '模块描述'
        required: true
      author:
        description: '模块作者'
        required: true
      type:
        description: '模块类型（module: 单一模块，modules: 多模块包）'
        required: true
        default: 'module'
        type: choice
        options:
        - module
        - modules
      start_mode:
        description: '启动模式（import: 作为模块导入，process: 在独立进程中运行）'
        required: true
        default: 'import'
        type: choice
        options:
        - import
        - process

jobs:
  initialize:
    runs-on: ubuntu-latest
    # 添加权限设置
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          # 获取完整历史以确保不会发生冲突
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install toml python-dateutil

      - name: Initialize module
        id: init
        run: |
          python .github/scripts/initialize_module.py \
            --new_id "${{ github.event.inputs.new_id }}" \
            --name "${{ github.event.inputs.name }}" \
            --description "${{ github.event.inputs.description }}" \
            --author "${{ github.event.inputs.author }}" \
            --type "${{ github.event.inputs.type }}" \
            --start_mode "${{ github.event.inputs.start_mode }}"
        
      - name: Set up Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
      
      - name: Commit changes
        run: |
          git add .
          git commit -m "Initialize module: ${{ github.event.inputs.new_id }}"
      
      - name: Create tag
        run: |
          git tag -a v0.0.0 -m "Initial version 0.0.0"
          
      - name: Push changes and tags
        # 使用内置的 Git 命令推送更改，避免使用第三方 Action
        run: |
          git push origin HEAD:${{ github.ref }} --force
          git push origin --tags --force
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v0.0.0
          name: Initial Release v0.0.0
          body: |
            初始化模块: ${{ github.event.inputs.new_id }}
            模块名称: ${{ github.event.inputs.name || github.event.inputs.new_id }}
            描述: ${{ github.event.inputs.description }}
            作者: ${{ github.event.inputs.author }}
            类型: ${{ github.event.inputs.type }}
            启动模式: ${{ github.event.inputs.start_mode }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}