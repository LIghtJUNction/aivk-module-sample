name: Clean Up Workflows

on:
  workflow_dispatch:
    inputs:
      days_old:
        description: '清理多少天前的工作流记录 (默认: 30)'
        required: false
        default: '30'
      workflow_ids:
        description: '要清理的工作流ID，用逗号分隔，留空表示清理所有工作流'
        required: false
  schedule:
    # 每月1日的UTC 00:00 运行
    - cron: '0 0 1 * *'

jobs:
  cleanup:
    runs-on: ubuntu-latest
    permissions:
      actions: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install GitHub CLI
        run: |
          wget https://github.com/cli/cli/releases/download/v2.37.0/gh_2.37.0_linux_amd64.deb -q || { 
            echo "下载 GitHub CLI 失败，尝试使用备用方法"; 
            sudo apt-get update && sudo apt-get install -y gh;
          }
          if [ -f gh_2.37.0_linux_amd64.deb ]; then
            sudo dpkg -i gh_2.37.0_linux_amd64.deb || echo "安装 GitHub CLI 失败，但继续执行"
          fi
          
          # 验证 GitHub CLI 是否可用
          if ! command -v gh &> /dev/null; then
            echo "GitHub CLI 不可用，尝试使用 curl 方法清理"
            export USE_CURL=true
          else
            export USE_CURL=false
          fi

      - name: Clean up workflow runs
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DAYS_OLD: ${{ github.event.inputs.days_old || '30' }}
          WORKFLOW_IDS: ${{ github.event.inputs.workflow_ids }}
          REPO: ${{ github.repository }}
        run: |
          # 设置日期截止点
          CURRENT_TIMESTAMP=$(date +%s)
          CUTOFF_TIMESTAMP=$((CURRENT_TIMESTAMP - DAYS_OLD * 86400))
          CUTOFF_DATE=$(date -d @$CUTOFF_TIMESTAMP +"%Y-%m-%dT%H:%M:%SZ" 2>/dev/null || date -r $CUTOFF_TIMESTAMP +"%Y-%m-%dT%H:%M:%SZ")
          echo "清理 $DAYS_OLD 天前 ($CUTOFF_DATE) 的工作流记录"
          
          if [ "$USE_CURL" = "true" ]; then
            # 使用 curl 方法清理
            echo "使用 curl 方法清理工作流"
            
            # 获取所有工作流
            if [ -z "$WORKFLOW_IDS" ]; then
              echo "获取所有工作流..."
              WORKFLOWS_JSON=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
                "https://api.github.com/repos/$REPO/actions/workflows")
              WORKFLOWS=$(echo "$WORKFLOWS_JSON" | grep -o '"id":[0-9]*' | grep -o '[0-9]*')
            else
              echo "使用指定的工作流 ID: $WORKFLOW_IDS"
              WORKFLOWS=$(echo $WORKFLOW_IDS | tr ',' ' ')
            fi
            
            # 遍历工作流
            for WORKFLOW_ID in $WORKFLOWS; do
              echo "处理工作流 ID: $WORKFLOW_ID"
              
              # 获取工作流运行记录
              RUNS_JSON=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
                "https://api.github.com/repos/$REPO/actions/workflows/$WORKFLOW_ID/runs?per_page=100")
              
              # 提取需要删除的运行记录 ID
              RUNS=$(echo "$RUNS_JSON" | grep -E '"id":|"created_at":' | grep -B 1 "\"created_at\":\".*$CUTOFF_DATE" | grep '"id":' | grep -o '[0-9]*')
              
              for RUN_ID in $RUNS; do
                echo "删除运行记录 ID: $RUN_ID"
                DELETE_RESULT=$(curl -s -X DELETE -H "Authorization: token $GITHUB_TOKEN" \
                  "https://api.github.com/repos/$REPO/actions/runs/$RUN_ID")
                echo "删除结果: $DELETE_RESULT"
              done
            done
          else
            # 使用 GitHub CLI 方法清理
            echo "使用 GitHub CLI 方法清理工作流"
            
            # 授权 GitHub CLI
            echo "$GITHUB_TOKEN" | gh auth login --with-token || { 
              echo "GitHub CLI 授权失败，将使用备用方法";
              export USE_CURL=true;
            }
            
            if [ "$USE_CURL" = "false" ]; then
              # 确定要清理的工作流
              if [ -z "$WORKFLOW_IDS" ]; then
                echo "正在清理所有工作流..."
                WORKFLOWS=$(gh api repos/$REPO/actions/workflows | jq -r '.workflows[].id' 2>/dev/null || echo "")
                
                if [ -z "$WORKFLOWS" ]; then
                  echo "无法获取工作流列表，可能是 jq 未安装"
                  apt-get update && apt-get install -y jq || echo "安装 jq 失败，继续尝试使用其他方法"
                  WORKFLOWS=$(gh api repos/$REPO/actions/workflows | grep -o '"id":[0-9]*' | grep -o '[0-9]*')
                fi
              else
                echo "正在清理指定的工作流: $WORKFLOW_IDS"
                WORKFLOWS=$(echo $WORKFLOW_IDS | tr ',' ' ')
              fi
              
              # 遍历每个工作流并清理旧的运行记录
              for WORKFLOW_ID in $WORKFLOWS; do
                echo "处理工作流ID: $WORKFLOW_ID"
                
                # 获取该工作流的所有运行记录
                RUNS=$(gh api repos/$REPO/actions/workflows/$WORKFLOW_ID/runs | jq -r ".workflow_runs[] | select(.created_at < \"$CUTOFF_DATE\") | .id" 2>/dev/null || echo "")
                
                if [ -z "$RUNS" ]; then
                  echo "无法获取运行记录列表，可能是没有旧记录或 jq 未正确工作"
                  RUNS_JSON=$(gh api repos/$REPO/actions/workflows/$WORKFLOW_ID/runs)
                  RUNS=$(echo "$RUNS_JSON" | grep -E '"id":|"created_at":' | grep -B 1 "\"created_at\":\".*$CUTOFF_DATE" | grep '"id":' | grep -o '[0-9]*')
                fi
                
                # 删除每个旧的运行记录
                for RUN_ID in $RUNS; do
                  echo "删除运行记录ID: $RUN_ID"
                  gh api repos/$REPO/actions/runs/$RUN_ID -X DELETE || echo "删除失败，可能已被删除或没有权限"
                done
              done
            else
              echo "无法使用 GitHub CLI，已跳转到 curl 方法"
            fi
          fi
          
          echo "清理完成!"